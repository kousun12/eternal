{"name":"shaders","nodes":[{"id":"bf61d0a3-5d63-422b-97db-06c3086992a9","type":"ShaderMaterialNode","x":581,"y":286,"state":{}},{"id":"be567bb0-242a-414c-b98f-501a32935b30","type":"ThreeNode","x":1068.94117647059,"y":304.8235294117645,"state":{}},{"id":"8c3c9c57-b42b-444a-aa5a-3eeef94b7c04","type":"string","x":361,"y":306,"state":{"value":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nconst mat2 m = mat2(0.82, 0.60, -0.60, 0.82);\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nfloat rand(vec2 n) { return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453); }\n\nfloat noise(in vec2 p) {\n  vec2 ip = floor(p);\n  vec2 u = fract(p);\n  u = u*u*(3.0-2.0*u);\n  float res = mix(\n    mix(rand(ip), rand(ip+vec2(1.0, 0.0)), u.x),\n    mix(rand(ip+vec2(0.0, 1.0)), rand(ip+vec2(1.0, 1.0)), u.x), u.y\n  );\n  return res*res;\n}\n\nfloat fbm4(vec2 p) {\n  float f = 0.0;\n  float n_factor = sin(u_time / 50.0) * 30.0;\n  f += 0.5000*noise(p); p = m*p*(n_factor + 2.02);\n  f += 0.2500*noise(p); p = m*p*(n_factor + 2.03);\n  f += 0.1250*noise(p); p = m*p*(n_factor * 2.01);\n  f += 0.0625*noise(p);\n  return f/0.9375;\n}\n\nfloat fbm6(vec2 p) {\n  float f = 0.0;\n  f += 0.500000*(0.5+0.5*noise(p)); p = m*p*2.02;\n  f += 0.250000*(0.5+0.5*noise(p)); p = m*p*2.03;\n  f += 0.125000*(0.5+0.5*noise(p)); p = m*p*2.01;\n  f += 0.062500*(0.5+0.5*noise(p)); p = m*p*2.04;\n  f += 0.031250*(0.5+0.5*noise(p)); p = m*p*2.01;\n  f += 0.015625*(0.5+0.5*noise(p));\n  return f/0.96875;\n}\n\nvec2 fbm4_2(vec2 p) { return vec2(fbm4(p), fbm4(p+vec2(7.8))); }\n\nvec2 fbm6_2(vec2 p) { return vec2(fbm6(p+vec2(12.8)), fbm6(p+vec2(11.5))); }\n\nfloat ferno(vec2 q, out vec4 ron) {\n  q += 0.03*tan(vec2(0.27, 0.23)*u_time + length(q)*vec2(4.1, 4.3));\n  vec2 o = fbm4_2(0.9*q);\n  o += 0.04*sin(vec2(0.12, 0.14)*u_time + length(o));\n  vec2 n = fbm6_2(3.0*o);\n  ron = vec4(o, n);\n  float f = 0.5 + 0.5*fbm4(1.8*q + 6.0*n);\n  return mix(f, f*f*2.7, f*abs(n.x));\n}\n\nvoid main() {\n  vec2 p = (2.0*gl_FragCoord.xy-u_resolution.xy)/u_resolution.y;\n  float e = 2.0/u_resolution.y;\n\n  vec4 on = vec4(0.0);\n  float f = ferno(p, on);\n\n  vec3 col = vec3(0.0);\n  col = mix(vec3(0.2, 0.1, 0.4), vec3(0.3, 0.05, 0.05), f);\n  col = mix(col, vec3(0.9, 0.9, 0.9), dot(on.zw, on.zw));\n  col = mix(col, vec3(0.4, 0.3, 0.3), 0.2 + 0.5*on.y*on.y);\n  col = mix(col, vec3(0.0, 0.2, 0.5), 0.5*smoothstep(1.2, 1.3, abs(on.z)+abs(on.w)));\n  col = clamp(col*f*2.0, 0.0, 1.0);\n\n  vec4 kk;\n  vec3 nor = normalize(vec3(ferno(p+vec2(e, 0.0), kk)-f, 3.0*e, ferno(p+vec2(0.0, e), kk)-f));\n\n  vec3 lig = normalize(vec3(0.9, 0.8, -0.99));\n  float dif = clamp(0.3+0.7*dot(nor, lig), 0.0, 1.0);\n  vec3 lin = vec3(0.70, 0.90, 0.95)*(nor.y*0.5+0.5) + vec3(0.15, 0.10, 0.05)*dif;\n  col *= 1.6*lin;\n  col = 1.0 - col;\n  col = 1.1*col*col;\n  gl_FragColor = vec4(col, 1.0);\n}\n"},"title":"kolmogorov's inferno"},{"id":"013eb0e2-293d-46e5-b9a6-c4d88e63cfa0","type":"PlaneGeometryNode","x":581,"y":168,"state":{}},{"id":"a07e65ba-fa54-4d77-8cdf-3a3b1fafaeb4","type":"MeshNode","x":830.9411764705901,"y":231.82352941176453,"state":{}},{"id":"9b2c45e5-55bd-4461-8870-3a63bdf4a6d3","type":"Vector3D","x":581,"y":428,"state":{"value":"{\"x\":100,\"y\":100,\"z\":100}"}},{"id":"cc6ef747-69f5-4b75-9454-05b91ef7f32b","type":"number","x":361,"y":454.5294117647061,"state":{"value":100}},{"id":"322f0b00-908a-4499-b689-5dc6ec8d2790","type":"VignettePassNode","x":830.9411764705901,"y":500.8235294117645,"state":{}},{"id":"7546cc2f-e01c-462c-82f5-a9d0c3001289","type":"number","x":581,"y":571,"state":{"value":0.1}}],"edges":[{"id":"76d32eca-c80e-4b29-96bc-fb76eeb8cae2","fromId":"8c3c9c57-b42b-444a-aa5a-3eeef94b7c04","fromPort":"out","toId":"bf61d0a3-5d63-422b-97db-06c3086992a9","toPort":"fragment"},{"id":"9f943672-2b6f-4cb1-ad85-f9cbe4504066","fromId":"013eb0e2-293d-46e5-b9a6-c4d88e63cfa0","fromPort":"geometry","toId":"a07e65ba-fa54-4d77-8cdf-3a3b1fafaeb4","toPort":"geometry"},{"id":"c85a8c22-2405-4d75-90d7-ecf64832eee1","fromId":"bf61d0a3-5d63-422b-97db-06c3086992a9","fromPort":"material","toId":"a07e65ba-fa54-4d77-8cdf-3a3b1fafaeb4","toPort":"material"},{"id":"12b839b5-e57a-4faa-b10e-e98a42ff99f4","fromId":"a07e65ba-fa54-4d77-8cdf-3a3b1fafaeb4","fromPort":"mesh","toId":"be567bb0-242a-414c-b98f-501a32935b30","toPort":"child"},{"id":"0f39ab8e-58d2-4f14-91f3-20ad21617222","fromId":"cc6ef747-69f5-4b75-9454-05b91ef7f32b","fromPort":"out","toId":"9b2c45e5-55bd-4461-8870-3a63bdf4a6d3","toPort":"x"},{"id":"47dcf0b6-9a1a-455d-843b-7ce67c789b6e","fromId":"cc6ef747-69f5-4b75-9454-05b91ef7f32b","fromPort":"out","toId":"9b2c45e5-55bd-4461-8870-3a63bdf4a6d3","toPort":"y"},{"id":"a2ca65bf-173c-4d9a-9c67-d653df40481a","fromId":"cc6ef747-69f5-4b75-9454-05b91ef7f32b","fromPort":"out","toId":"9b2c45e5-55bd-4461-8870-3a63bdf4a6d3","toPort":"z"},{"id":"38ef1339-2711-4774-b07a-ea12e9b4a0ec","fromId":"9b2c45e5-55bd-4461-8870-3a63bdf4a6d3","fromPort":"out","toId":"a07e65ba-fa54-4d77-8cdf-3a3b1fafaeb4","toPort":"scale"},{"id":"850659fd-6bbc-4ca1-9673-cfdf98ca2e14","fromId":"322f0b00-908a-4499-b689-5dc6ec8d2790","fromPort":"effect","toId":"be567bb0-242a-414c-b98f-501a32935b30","toPort":"fx"},{"id":"3fd8d0f7-b935-4512-84bc-daacb01aea69","fromId":"7546cc2f-e01c-462c-82f5-a9d0c3001289","fromPort":"out","toId":"322f0b00-908a-4499-b689-5dc6ec8d2790","toPort":"darkness"}],"meta":{"zoom":16},"description":"OpenGL shader"}